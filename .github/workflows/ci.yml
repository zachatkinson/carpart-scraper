name: CI

on:
  push:
    branches: [master, main, develop]
  pull_request:
    branches: [master, main, develop]

jobs:
  test:
    name: Tests - ${{ matrix.test-group.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test-group:
          - name: "Unit 1/4"
            id: "unit1"
            splits: 4
            group: 1
            path: "tests/unit/"
          - name: "Unit 2/4"
            id: "unit2"
            splits: 4
            group: 2
            path: "tests/unit/"
          - name: "Unit 3/4"
            id: "unit3"
            splits: 4
            group: 3
            path: "tests/unit/"
          - name: "Unit 4/4"
            id: "unit4"
            splits: 4
            group: 4
            path: "tests/unit/"
          - name: "Integration"
            id: "integration"
            splits: 1
            group: 1
            path: "tests/integration/"
          - name: "Performance"
            id: "performance"
            splits: 1
            group: 1
            path: "tests/performance/"

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"
          enable-cache: true

      - name: Set up Python
        run: uv python install 3.13

      - name: Install dependencies
        run: uv sync --all-extras --dev

      - name: Install pytest-split
        run: uv pip install pytest-split

      - name: Run tests with coverage
        env:
          COVERAGE_FILE: .coverage.${{ matrix.test-group.id }}
        run: |
          uv run pytest ${{ matrix.test-group.path }} \
            --splits ${{ matrix.test-group.splits }} \
            --group ${{ matrix.test-group.group }} \
            --cov=src \
            --cov-report=term-missing \
            --cov-fail-under=0 \
            --no-cov-on-fail \
            -v

      - name: Upload coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.test-group.id }}
          path: .coverage.${{ matrix.test-group.id }}
          retention-days: 1

  coverage:
    name: Combine & Upload Coverage
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.13

      - name: Install dependencies
        run: uv sync --all-extras --dev

      - name: Download all coverage artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-*
          merge-multiple: true

      - name: Combine coverage
        run: |
          uv run coverage combine
          uv run coverage xml
          uv run coverage html
          uv run coverage report --fail-under=90

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            htmlcov/
            coverage.xml

  lint:
    name: Lint and Type Check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"
          enable-cache: true

      - name: Set up Python
        run: uv python install 3.13

      - name: Install dependencies
        run: uv sync --all-extras --dev

      - name: Run pre-commit hooks
        run: |
          uv pip install pre-commit
          uv run pre-commit run --all-files --show-diff-on-failure

  security:
    name: Security Checks
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.13

      - name: Install dependencies
        run: uv sync --all-extras --dev

      - name: Run safety check
        run: |
          uv pip install safety
          uv run safety check --json || true

      - name: Run bandit security linter
        run: |
          uv pip install bandit
          uv run bandit -r src/ -f json || true
